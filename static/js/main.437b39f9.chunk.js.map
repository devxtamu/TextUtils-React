{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","placeholder","TextForm","useState","text","setText","heading","rows","style","backgroundColor","color","value","onChange","event","console","log","target","toUpperCase","showAlert","toLowerCase","startsWith","split","length","Alert","alert","role","word","lower","charAt","slice","capitalize","message","App","setMode","setAlert","msg","typ","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.437b39f9.chunk.js","sourcesContent":["import React from 'react'\r\n//import {Link} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n             <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  {/*<Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>*/}\r\n  <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div className=\"collapse navbar-collapse \" id=\"navbarNavDropdown\">\r\n    <ul className=\"navbar-nav \">\r\n      <li className=\"nav-item active\">\r\n        <a className=\"nav-link\" href='#'>Home</a>\r\n      </li>\r\n      {/*<li className=\"nav-item\">\r\n        <a href='/about' className=\"nav-link\">About</a>\r\n    </li>*/}\r\n\r\n    </ul>\r\n    <div className={`form-check form-switch text-${props.mode === \"light\"?\"dark\":\"light\"}`} >\r\n     <input className=\"form-check-input\" type=\"checkbox\" onClick= {props.toggleMode} id=\"flexSwitchCheckDEfault\"/>\r\n     <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.mode === \"light\"? \"Enable Dark Mode\": \"Disable Dark Mode\"}</label>\r\n\r\n</div>\r\n</div>\r\n    <form className=\"d-flex\">\r\n    <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n    <button className=\"btn btn-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n    </form>\r\n</nav>\r\n</>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = { title: PropTypes.string.isRequired}\r\n\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const [text, setText] = useState(\" Enter your text here\");\r\n    const handleUpperCase = () =>{\r\n        console.log(\"The button was clicked\")\r\n        setText(text.toUpperCase())\r\n        props.showAlert(\"The text has been converted into Upper Case\",\"success\")\r\n    }\r\n    const handleLowerCase = () =>{\r\n        console.log(\"The button was clicked\")\r\n        setText(text.toLowerCase())\r\n        props.showAlert(\"The text has been converted into lower case\",\"success\")\r\n    }\r\n    const handleOnChange = (event) =>{\r\n        console.log(\"On Change\")\r\n        setText(event.target.value)\r\n    }\r\n    const handleClearText = () =>{\r\n        setText(\"\")\r\n    }\r\n        return (\r\n            <>\r\n        <div className={`container text-${props.mode=== \"light\"?\"black\":\"white\"}`}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"form-group\">\r\n    <label htmlFor=\"exampleFormControlTextarea1\">Enter your text</label>\r\n    <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"8\" style={{backgroundColor: props.mode===\"light\"?'white':'#17252b', color:props.mode===\"dark\"?'white':'black'}} value={text} onChange={handleOnChange}></textarea>\r\n  </div>\r\n  <button className=\"btn btn-primary mx-2 my-2\" style={{backgroundColor:\"green\"}} onClick={handleUpperCase}>Convert to UpperCase</button>\r\n  <button className=\"btn btn-primary mx-2 my-2\" onClick={handleLowerCase}>Convert to LowerCase</button>\r\n  <button className=\"btn btn-primary mx-2 my-2\" onClick={handleClearText}>Clear Text</button>\r\n\r\n        </div>\r\n        <div className={`container my-2 text-${props.mode==='light'?'black':'white'}`}>\r\n            <h1>Your Text Summary</h1>\r\n            <p> {text.startsWith(\"\")? text.split(\" \").length-1: text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.08 * text.split(\" \").length} Minutes to read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length===0?\"Enter your text to preview\":text}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1)\r\n\r\n    }\r\n    return (\r\n            props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>:{props.alert.message}\r\n</div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\n//import About from './Components/About';\nimport React, { useState } from 'react'\nimport Alert from './Components/Alert';\n//import {\n // BrowserRouter as Router,\n  //Switch,\n  //Route\n//} from \"react-router-dom\";\n\n\n\nfunction App() {\n const [mode, setMode] = useState(\"light\");\n const [alert, setAlert] = useState(null);\n const showAlert = (msg, typ) =>{\n   setAlert({\n     message:msg,\n     type:typ\n   })\n\n   setTimeout(() => {\n     setAlert(null)\n   }, 1500);\n }\n const toggleMode = () =>{\n  if (mode===\"light\"){\n     setMode(\"dark\")\n     document.body.style.backgroundColor=\"#17252b\"\n     showAlert(\"Dark Mode has been enabled\",\"success\")\n    document.title = \" TextUtils - Dark Mode\"\n    }\n  else{\n    setMode(\"light\")\n    document.body.style.backgroundColor = \"white\"\n    showAlert(\"Dark Mode has been disabled\", \"success\")\n    document.title = 'TextUtils - Home'\n  }\n}\n  return (\n    //<Router>\n    <>\n    <Navbar title=\"My App\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert}/>\n      <TextForm showAlert={showAlert} mode={mode} heading=\"Enter the text to analyze\"/>\n      {/*<Switch>\n        <Route exact path=\"/about\">\n          <About mode={mode}/>\n  </Route>\n  \n        <Route  exact path='/'>\n        <TextForm showAlert={showAlert} heading= \"Enter the text to analyze\" mode={mode}/>\n        </Route>\n        </Switch>   \n      </Router>*/}\n      </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}